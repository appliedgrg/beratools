name: Build & Publish (rattler-build + Pixi)

on:
  push:
    tags: 
        - '*.*.*'

jobs:
  build-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Disable Pixi cache — avoids missing pixi.lock errors
      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          cache: false

      - name: Install rattler-build + anaconda-client
        run: |
          pixi global install rattler-build anaconda-client
          echo "$HOME/.pixi/bin" >> "$GITHUB_PATH"

      - name: Build Conda package from ./packaging
        run: |
          set -euo pipefail
          echo "🏗️ Building recipe from ./packaging..."
          rattler-build build packaging

      - name: Collect artifacts to ./dist/conda
        run: |
          set -euo pipefail
          mkdir -p dist/conda
          echo "📦 Collecting build outputs..."

          # Copy any produced .conda or .tar.bz2 files
          found=0
          while IFS= read -r -d '' f; do cp -v "$f" dist/conda/; found=1; done < <(
            find packaging -type f \( -name '*.conda' -o -name '*.tar.bz2' \) -print0
          )

          if [ $found -eq 0 ]; then
            echo "No artifacts under ./packaging, checking broader scope..."
            while IFS= read -r -d '' f; do cp -v "$f" dist/conda/; found=1; done < <(
              find . -maxdepth 4 -type f \( -name '*.conda' -o -name '*.tar.bz2' \) -print0
            )
          fi

          if [ $found -eq 0 ]; then
            echo "❌ No build artifacts found. Check rattler-build output."
            exit 1
          fi

          echo "✅ Artifacts staged in dist/conda:"
          ls -lah dist/conda

      - name: Upload to Anaconda.org (binstar)
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=(dist/conda/*.conda dist/conda/*.tar.bz2)
          if [ ${#files[@]} -eq 0 ]; then
            echo "❌ No package artifacts found to upload."
            exit 1
          fi

          for f in "${files[@]}"; do
            echo "🚀 Uploading $f"
            binstar -t "$ANACONDA_API_TOKEN" upload "$f" \
              --user appliedgrg --label main --force
          done

          echo "🎉 Upload complete!"
