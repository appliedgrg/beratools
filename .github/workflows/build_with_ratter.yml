name: Build & Publish (rattler-build + Pixi)

on:
  push:
    tags: ['v*']      # Triggers only on version tags like v1.2.3

jobs:
  build-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          cache: true

      - name: Install rattler-build + anaconda-client
        run: |
          pixi global install rattler-build anaconda-client
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Build Conda package from ./packaging
        run: |
          set -euo pipefail
          echo "Building package from ./packaging..."
          rattler-build build packaging
          echo "Build complete."

      - name: Collect build artifacts to ./dist/conda
        run: |
          set -euo pipefail
          mkdir -p dist/conda
          echo "Collecting artifacts into dist/conda"

          # Copy .conda or .tar.bz2 packages from rattler-build output
          found=0
          while IFS= read -r -d '' f; do
            cp -v "$f" dist/conda/
            found=1
          done < <(find packaging -type f \( -name '*.conda' -o -name '*.tar.bz2' \) -print0)

          if [ $found -eq 0 ]; then
            echo "No artifacts found under ./packaging, checking broader scope..."
            while IFS= read -r -d '' f; do
              cp -v "$f" dist/conda/
              found=1
            done < <(find . -maxdepth 4 -type f \( -name '*.conda' -o -name '*.tar.bz2' \) -print0)
          fi

          if [ $found -eq 0 ]; then
            echo "❌ No build artifacts found. Check your recipe output folder."
            exit 1
          fi

          echo "✅ Artifacts staged in dist/conda:"
          ls -lah dist/conda

      - name: Upload to Anaconda.org
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=(dist/conda/*.conda dist/conda/*.tar.bz2)

          if [ ${#files[@]} -eq 0 ]; then
            echo "❌ No package artifacts found in dist/conda to upload."
            exit 1
          fi

          for f in "${files[@]}"; do
            echo "📦 Uploading $f"
            # Pixi exposes `binstar`, not `anaconda`
            binstar -t "$ANACONDA_API_TOKEN" upload "$f" \
              --user appliedgrg --label main --force
          done

          echo "✅ Upload complete."
