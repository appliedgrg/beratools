name: Build & Publish (rattler-build + Pixi)

on:
  push:
    tags: ['v*']      # e.g. v1.2.3

jobs:
  build-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          cache: true

      - name: Install rattler-build + anaconda-client (binstar)
        run: |
          pixi global install rattler-build anaconda-client
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      # Build the recipe from a CERTAIN (fixed) path: ./packaging
      - name: Build (rattler-build) from ./packaging
        run: |
          # Build your recipe folder (change if your recipe path differs)
          rattler-build build packaging

      # Collect artifacts into a CERTAIN upload directory: ./dist/conda
      - name: Collect artifacts to ./dist/conda
        run: |
          set -euo pipefail
          mkdir -p dist/conda
          # Copy .conda first (preferred); fallback .tar.bz2 if any exist
          found=0
          while IFS= read -r -d '' f; do
            cp -v "$f" dist/conda/
            found=1
          done < <(find packaging -type f -name '*.conda' -print0)

          if [ $found -eq 0 ]; then
            while IFS= read -r -d '' f; do
              cp -v "$f" dist/conda/
              found=1
            done < <(find packaging -type f -name '*.tar.bz2' -print0)
          fi

          if [ $found -eq 0 ]; then
            echo "No build artifacts found under ./packaging."
            echo "Check rattler-build output paths or recipe layout."
            exit 1
          fi

          echo "Artifacts staged in dist/conda:"
          ls -lah dist/conda

      # Upload from the CERTAIN path: ./dist/conda/*.conda (or *.tar.bz2)
      - name: Upload to Anaconda.org (binstar)
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=(dist/conda/*.conda dist/conda/*.tar.bz2)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No package artifacts in dist/conda to upload."
            exit 1
          fi

          for f in "${files[@]}"; do
            echo "Uploading $f"
            # Pixi exposes 'binstar' (not 'anaconda').
            # Use --label (e.g., main/dev), and --user for your org/username.
            binstar -t "$ANACONDA_API_TOKEN" upload "$f" \
              --user appliedgrg --label main --force
          done
