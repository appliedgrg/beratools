name: Build GDAL Wheel (vcpkg, Windows)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      GDAL_TAG: "v3.9.3"     # GDAL version
      PY_VER: "3.11"         # Python version

    steps:
      - uses: actions/checkout@v4

      # Install the specific Python version
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      # Set up and run vcpkg to build GDAL + dependencies
      - name: Build GDAL via vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 271a5b8850aa50f9a40269cbf3cf414b36e333d6 # Example commit, replace with desired baseline

      # Clone GDAL source and build the Python bindings
      - name: Build GDAL Python bindings
        shell: pwsh
        run: |
          git clone https://github.com/OSGeo/gdal C:\src\gdal
          cd C:\src\gdal
          git checkout $env:GDAL_TAG
          mkdir build ; cd build
          cmake .. -G "Ninja" `
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake `
            -DGDAL_BUILD_OPTIONAL_DRIVERS=OFF `
            -DOGR_BUILD_OPTIONAL_DRIVERS=OFF `
            -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
          cmake --build . --config Release --target python_binding
          cd ..\swig\python
          python -m pip install --upgrade pip wheel
          python setup.py bdist_wheel

      # Repair wheel to make it "fat" (embed DLLs)
      - name: Make wheel self-contained
        shell: pwsh
        run: |
          python -m pip install delvewheel
          $wheel = (Get-ChildItem C:\src\gdal\swig\python\dist\*.whl).FullName
          # Add vcpkg bin paths so delvewheel can find DLLs
          python -m delvewheel repair "$wheel" `
            --add-path $env:VCPKG_ROOT\installed\x64-windows\bin `
            --add-path $env:VCPKG_ROOT\installed\x64-windows\tools\proj `
            --wheel-dir C:\src\gdal\swig\python\dist
          Get-ChildItem C:\src\gdal\swig\python\dist

      # Upload resulting wheel artifact
      - uses: actions/upload-artifact@v4
        with:
          name: gdal-wheel-${{ env.GDAL_TAG }}-cp${{ env.PY_VER }}
          path: C:\src\gdal\swig\python\dist\*.whl
          retention-days: 90
